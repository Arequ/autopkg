---
name: Test AutoPkg

on:
  push:
    paths:
      - "**.py"
      - "requirements.txt"
      - ".github/workflows/tests.yaml"
  pull_request:
    paths:
      - "**.py"
      - "requirements.txt"
      - ".github/workflows/tests.yaml"
  schedule:
    # run first day of every month:
    - cron: "* * 1 * *"

jobs:
  unittests:
    strategy:
      matrix:
        # https://ncorti.com/blog/howto-github-actions-build-matrix
        # ubuntu-latest, macos-latest, windows-latest
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # only needed on self hosted windows runners:
      - name: set powershell execution policy CurrentUser
        if: runner.os == 'Windows'
        shell: cmd
        run: powershell -command "Set-ExecutionPolicy -Force -ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Set token
        run: |
          cd ~
          echo ${{ secrets.GITHUB_TOKEN }} > ".autopkg_gh_token"

      - name: Install requirements
        run: pip install --requirement requirements.txt

      - name: create empty config windows
        # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if not exist "%USERPROFILE%/AppData/Local/Autopkg" mkdir "%USERPROFILE%/AppData/Local/Autopkg"
          if not exist "%USERPROFILE%/AppData/Local/Autopkg/config.json" echo {} > "%USERPROFILE%/AppData/Local/Autopkg/config.json"
      - name: create default autopkg config file Linux
        if: runner.os == 'Linux'
        run: |
          cd ~ && mkdir -p .config/Autopkg
          cd ~ && echo {} > .config/Autopkg/config.json
      - name: run unittests
        run: python Scripts/run_tests.py
      - name: run e2e tests
        # if: runner.os != 'Windows'
        shell: bash
        run: |
          echo "**List-processors:"
          python Code/autopkg list-processors --prefs tests/preferences.plist
          echo "**Processor-info:"
          python Code/autopkg processor-info URLDownloader --prefs tests/preferences.plist
          echo "**Repo-add:"
          python Code/autopkg repo-add recipes --prefs tests/preferences.plist
          echo "**Repo-list:"
          python Code/autopkg repo-list --prefs tests/preferences.plist
          echo "**Repo-update:"
          python Code/autopkg repo-update all --prefs tests/preferences.plist
          echo "**Audit:"
          python Code/autopkg audit Firefox.munki --prefs tests/preferences.plist
          echo "**Info:"
          python Code/autopkg info Firefox.munki --prefs tests/preferences.plist
          echo "**List-recipes:"
          python Code/autopkg list-recipes --prefs tests/preferences.plist
          echo "**Make-override:"
          python Code/autopkg make-override Firefox.munki --force --prefs tests/preferences.plist
          echo "**New-recipe:"
          python Code/autopkg new-recipe TestRecipe.check --prefs tests/preferences.plist
          echo "**Verify-trust-info:"
          python Code/autopkg verify-trust-info Firefox.munki --prefs tests/preferences.plist
          echo "**Update-trust-info:"
          python Code/autopkg update-trust-info Firefox.munki --prefs tests/preferences.plist
          echo "**Version:"
          python Code/autopkg version
          echo "**Repo-delete:"
          python Code/autopkg repo-delete recipes --prefs tests/preferences.plist
      - name: create recipe for integration test
        # https://github.com/marketplace/actions/create-file
        uses: finnp/create-file-action@1.0.0
          env:
            FILE_NAME: "AutopkgCore.test.recipe.yaml"
            # https://github.com/jgstew/jgstew-recipes/blob/main/Test-Recipes/AutopkgCore.test.recipe.yaml
            FILE_DATA: |
              ---
              Description: Test AutoPkg Core Cross Platform Processors
              Identifier: com.github.jgstew.test.AutoPkgCore
              Input:
                NAME: AutoPkgCoreTest
              MinimumVersion: "2.3"
              Process:
                # TODO: add: PlistEditor, PlistReader, Unarchiver, Versioner
                - Processor: DeprecationWarning
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/DeprecationWarning.py
                  Arguments:
                    warning_message: "This is just a test, not a real Deprecation Warning"
                - Processor: FileCreator
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/FileCreator.py
                  Arguments:
                    file_path: "test_file.txt"
                    file_content: "Hello World! FileCreator Processor test"
                - Processor: FileFinder
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/FileFinder.py
                  Arguments:
                    pattern: "**test_file.txt"
                - Processor: FileMover
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/FileMover.py
                  Arguments:
                    source: "test_file.txt"
                    target: "test_file_moved.txt"
                - Processor: Copier
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/Copier.py
                  Arguments:
                    source_path: "test_file_moved.txt"
                    destination_path: "test_file.txt"
                - Processor: PackageRequired
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/PackageRequired.py
                  Arguments:
                    PKG: "test_file.txt"
                # PathDeleter should have an option to NOT raise an error if file not found
                # it is a common practice to "delete" before copy or "delete" before move
                - Processor: PathDeleter
                  # https://github.com/autopkg/autopkg/blob/master/Code/autopkglib/PathDeleter.py
                  Arguments:
                    path_list: ["test_file.txt", "test_file_moved.txt"]
                - Processor: EndOfCheckPhase
      - name: get file contents
        shell: bash
        run: cat AutopkgCore.test.recipe.yaml
